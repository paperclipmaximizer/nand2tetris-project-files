// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value.
 * out(t+1) = (load(t), in(t), out(t))
 */
CHIP Bit {
    IN in, load;
    OUT out;

  PARTS:
    //        load
    // in--|  |
    // _--- MUX -> DFF ->
    // |_______________|
    // if load at time t-1 is 1, then we want the next out (the out at time t) to be exactly the input at time t-1
    // if load = 1, out = 1
    // aka, if load(t-1) then out(t)=in(t-1)
    // else out(t)=out(t-1)
    //
    // in=1, load=1, b=?, out=1; in=1, out=1
    // in=0, load=0, b=1, out=1; in=1, out=1
    // in=0, load=0, b=1, out=0; in=1, out=1
    // in=0, load=1, b=1, out=0; in=0, out=1
    // in=0, load=1, b=1, out=0; in=0, out=1
    Mux(a=b,b=in,sel=load,out=do);
    DFF(in=do,out=b,out=out);
}
